// <auto-generated />
using System;
using Event_Management_system.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Event_Management_system.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Event_Management_system.Models.Booking", b =>
                {
                    b.Property<int>("Booking_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_Id"));

                    b.Property<int>("Investor_Id")
                        .HasColumnType("int");

                    b.Property<int>("Presenter_Id")
                        .HasColumnType("int");

                    b.Property<int>("Room_Id")
                        .HasColumnType("int");

                    b.HasKey("Booking_Id");

                    b.HasIndex("Investor_Id");

                    b.HasIndex("Presenter_Id");

                    b.HasIndex("Room_Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Event_Management_system.Models.Hotel", b =>
                {
                    b.Property<int>("Hotel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hotel_Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Hotel_Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Event_Management_system.Models.Investor", b =>
                {
                    b.Property<int>("Investor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Investor_Id"));

                    b.Property<int?>("Mobile")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Investor_Id");

                    b.ToTable("Investors");
                });

            modelBuilder.Entity("Event_Management_system.Models.MatchingViewModel", b =>
                {
                    b.Property<int>("MV_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MV_Id"));

                    b.Property<DateTime>("FromDate_Investor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate_Presenter")
                        .HasColumnType("datetime2");

                    b.Property<int>("Investor_Id")
                        .HasColumnType("int");

                    b.Property<int?>("InvestorsInvestor_Id")
                        .HasColumnType("int");

                    b.Property<int>("Presenter_Id")
                        .HasColumnType("int");

                    b.Property<int?>("PresentersPresenter_Id")
                        .HasColumnType("int");

                    b.Property<int>("Sector_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Sector_Id1")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate_Investor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDate_Presenter")
                        .HasColumnType("datetime2");

                    b.HasKey("MV_Id");

                    b.HasIndex("InvestorsInvestor_Id");

                    b.HasIndex("PresentersPresenter_Id");

                    b.HasIndex("Sector_Id1");

                    b.ToTable("MatchingViewModel");
                });

            modelBuilder.Entity("Event_Management_system.Models.Presenter", b =>
                {
                    b.Property<int>("Presenter_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Presenter_Id"));

                    b.Property<int?>("Mobile")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Presenter_Id");

                    b.ToTable("Presenters");
                });

            modelBuilder.Entity("Event_Management_system.Models.Room", b =>
                {
                    b.Property<int>("Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Room_Id"));

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hotel_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SearchViewModel_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Room_Id");

                    b.HasIndex("Hotel_Id");

                    b.HasIndex("SearchViewModel_Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Event_Management_system.Models.SearchViewModel", b =>
                {
                    b.Property<int>("SearchViewModel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SearchViewModel_Id"));

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SearchViewModel_Id");

                    b.ToTable("SearchViewModels");
                });

            modelBuilder.Entity("Event_Management_system.Models.Sector", b =>
                {
                    b.Property<int>("Sector_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sector_Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sector_Id");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("Event_Management_system.Models.Sector_Investor", b =>
                {
                    b.Property<int>("Sector_Investor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sector_Investor_Id"));

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Investor_Id")
                        .HasColumnType("int");

                    b.Property<int>("Sector_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Sector_Investor_Id");

                    b.HasIndex("Investor_Id");

                    b.HasIndex("Sector_Id");

                    b.ToTable("Sector_Investors");
                });

            modelBuilder.Entity("Event_Management_system.Models.Sector_Presenter", b =>
                {
                    b.Property<int>("Sector_Presenter_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sector_Presenter_Id"));

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Presenter_Id")
                        .HasColumnType("int");

                    b.Property<int>("Sector_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Sector_Presenter_Id");

                    b.HasIndex("Presenter_Id");

                    b.HasIndex("Sector_Id");

                    b.ToTable("Sector_Presenters");
                });

            modelBuilder.Entity("Event_Management_system.Models.Booking", b =>
                {
                    b.HasOne("Event_Management_system.Models.Investor", "Investor")
                        .WithMany("Bookings")
                        .HasForeignKey("Investor_Id")
                        .IsRequired();

                    b.HasOne("Event_Management_system.Models.Presenter", "Presenter")
                        .WithMany("Bookings")
                        .HasForeignKey("Presenter_Id")
                        .IsRequired();

                    b.HasOne("Event_Management_system.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("Room_Id")
                        .IsRequired();

                    b.Navigation("Investor");

                    b.Navigation("Presenter");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Event_Management_system.Models.MatchingViewModel", b =>
                {
                    b.HasOne("Event_Management_system.Models.Investor", "Investors")
                        .WithMany("MatchingViewModels")
                        .HasForeignKey("InvestorsInvestor_Id");

                    b.HasOne("Event_Management_system.Models.Presenter", "Presenters")
                        .WithMany()
                        .HasForeignKey("PresentersPresenter_Id");

                    b.HasOne("Event_Management_system.Models.Sector", "Sector")
                        .WithMany("MatchingViewModels")
                        .HasForeignKey("Sector_Id1");

                    b.Navigation("Investors");

                    b.Navigation("Presenters");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Event_Management_system.Models.Room", b =>
                {
                    b.HasOne("Event_Management_system.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("Hotel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Management_system.Models.SearchViewModel", null)
                        .WithMany("Room")
                        .HasForeignKey("SearchViewModel_Id");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Event_Management_system.Models.Sector_Investor", b =>
                {
                    b.HasOne("Event_Management_system.Models.Investor", "Investor")
                        .WithMany("Sector_Investors")
                        .HasForeignKey("Investor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Management_system.Models.Sector", "Sector")
                        .WithMany("Sector_Investors")
                        .HasForeignKey("Sector_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investor");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Event_Management_system.Models.Sector_Presenter", b =>
                {
                    b.HasOne("Event_Management_system.Models.Presenter", "Presenter")
                        .WithMany("Sector_Presenters")
                        .HasForeignKey("Presenter_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Management_system.Models.Sector", "Sector")
                        .WithMany("Sector_Presenters")
                        .HasForeignKey("Sector_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presenter");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Event_Management_system.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Event_Management_system.Models.Investor", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("MatchingViewModels");

                    b.Navigation("Sector_Investors");
                });

            modelBuilder.Entity("Event_Management_system.Models.Presenter", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Sector_Presenters");
                });

            modelBuilder.Entity("Event_Management_system.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Event_Management_system.Models.SearchViewModel", b =>
                {
                    b.Navigation("Room");
                });

            modelBuilder.Entity("Event_Management_system.Models.Sector", b =>
                {
                    b.Navigation("MatchingViewModels");

                    b.Navigation("Sector_Investors");

                    b.Navigation("Sector_Presenters");
                });
#pragma warning restore 612, 618
        }
    }
}
